exit
[row[0], row[1], row[2]].include? "nil"
[row[0], row[1], row[2]].include nil
[row[0], row[1], row[2]].include? "nil"
[row[0], row[1], row[2]].include? nil
if [row[0], row[1], row[2]].include? nil
   12:         next
   11:         puts "===========#{item.name} has been nil value ==============="
if [row[0], row[1], row[2]].include? nil
[row[0], row[1], row[2]].include? "nil"
[row[0], row[1], row[2]].include? nil
exit
[row[0], row[1], row[2]].include? "nil"
[row[0], row[1], row[2]].include? nil
[row[0], row[1], row[2]]
exit
c
[row[0], row[1], row[2]]
[row[0], row[1], row[2]].include? nil
[row[0], row[1], row[2]]
[row[0], row[1], row[2]].include?
c
@item.update(item_params)
Item.find(params[:id])
@item
Item.find(params[:id])
c
/inventorys/1
inventory
inventory_url
inventory_path
inventorys_path
inventorys_url
redirect_to controller: :inventorys, action: :show
c
inventory_url
redirect_to inventory_path
c
inventory.items.new(item_params)
c
inventory = Inventory.find(params[:inventory_id])
params[:inventory_id]
params[inventory_id]
params
inventory
@inventory
@inventory.items.new(item_params)
item_params
c
@inventory.items.new
@item
item_params
@inventory.items.new(item_params)
c
params[item][:name]
params[item]
params[name]
params
params[:name]
item_params
params[:inventory_id]
c
item_params
c
params[:inventory_id]
params
item_params
params
item
Parameters
permitted
"inventory_id"=>"1"
inventory_id
params
item_params
c
params
permitted: true
permitted: true>
item_params
c
@item = Item.new
exit
c
Item.create(:name => row[0],:price => row[1],:rating => row[2],:inventory_id =>"1" )
c
Item.create(:name => row[1],:price => row[2],:rating => row[3],:inventory_id =>"1" )
:headers => true
c
Costomer.find(@invoice.costomer_id)
costomer.find(@invoice.costomer_id)
@invoice.costomer_id
@invoice
